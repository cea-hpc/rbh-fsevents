{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9bb6fda7_0a7f7bfa",
        "filename": "src/serialization.c",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-07-01T10:24:50Z",
      "side": 1,
      "message": "question: I understand the point of this code but I don\u0027t know if this is better than two strcmp in term of performance. There are just two cases here (maybe more are added later).",
      "range": {
        "startLine": 630,
        "startChar": 4,
        "endLine": 639,
        "endChar": 5
      },
      "revId": "98f63a947194131fd938cc49509370039a9750a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22548a85_6db18d77",
        "filename": "src/serialization.c",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-07-01T22:56:57Z",
      "side": 1,
      "message": "You can run this micro-benchmark if you wish to:\n\n#include \u003climits.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n#include \u003cstring.h\u003e\n\n#if 1\nstatic size_t\ntest(const char *key)\n{\n    switch (*key++) {\n    case \u0027r\u0027:\n        if (strcmp(key, \"egex\"))\n            break;\n        return 1;\n    case \u0027o\u0027:\n        if (strcmp(key, \"ptions\"))\n            break;\n        return 2;\n    }\n    return 0;\n}\n#else\nstatic size_t\ntest(const char *key)\n{\n    if (strcmp(key, \"regex\") \u003d\u003d 0)\n        return 1;\n    if (strcmp(key, \"options\") \u003d\u003d 0)\n        return 2;\n    return 0;\n}\n#endif\n\n#define ARRAY_SIZE(array) (sizeof(array) / sizeof(array[0]))\n\nint\nmain()\n{\n    const char *STRINGS[] \u003d {\n        \"regex\",\n        \"options\",\n        \"regex\",\n        \"options\",\n        \"options\",\n        \"regex\",\n        \"regex\",\n        \"regex\",\n        \"options\",\n        \"regex\",\n        \"options\",\n        \"regex\",\n        \"options\",\n        \"options\",\n        \"regex\",\n        \"regex\",\n    };\n    size_t count \u003d 0;\n\n    for (size_t i \u003d 0; i \u003c (1 \u003c\u003c 24); i++) {\n        for (size_t j \u003d 0; j \u003c ARRAY_SIZE(STRINGS); j++)\n            count +\u003d test(STRINGS[j]);\n    }\n\n    return count % 3;\n}\n\nThe results on my machine:\n\n- with \"make main \u0026\u0026 time ./main\":\n  - switch: 10s\n  - 2x strcmp: 13s\n- with \"make CFLAGS\u003d-O3\" \u0026\u0026 time ./main\":\n  - switch: 8s\n  - 2x strcmp: 11s",
      "parentUuid": "9bb6fda7_0a7f7bfa",
      "range": {
        "startLine": 630,
        "startChar": 4,
        "endLine": 639,
        "endChar": 5
      },
      "revId": "98f63a947194131fd938cc49509370039a9750a5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}