{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ead3aec7_e1803c6b",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-18T15:27:36Z",
      "side": 1,
      "message": "to remove",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 7
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efaabb27_6aa71881",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-21T11:32:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ead3aec7_e1803c6b",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 7
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6344173e_c28089cd",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-17T16:09:02Z",
      "side": 1,
      "message": "question: it means this will be allocated even if we will not use the enricher?",
      "range": {
        "startLine": 524,
        "startChar": 0,
        "endLine": 525,
        "endChar": 24
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0aec7315_7665336d",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 525,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-21T11:32:33Z",
      "side": 1,
      "message": "Yes, moved it to only be initialized if we encounter a XATTRS event",
      "parentUuid": "6344173e_c28089cd",
      "range": {
        "startLine": 524,
        "startChar": 0,
        "endLine": 525,
        "endChar": 24
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c18a2a7_14056248",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-18T15:27:36Z",
      "side": 1,
      "message": "minor: you could avoid this open if you keep the file descriptor outside the function call.\n\nfd \u003d open\n\nenrich_statx(fd, ...\nenrich_xattrs(fd, ...",
      "range": {
        "startLine": 562,
        "startChar": 9,
        "endLine": 562,
        "endChar": 19
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c788ef1e_12ad3a93",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 562,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-21T11:32:33Z",
      "side": 1,
      "message": "Unfortunately the open flags used for xattrs are different from the ones used for symlink and statx, so we still have to check which event is to be enriched before opening the file...",
      "parentUuid": "7c18a2a7_14056248",
      "range": {
        "startLine": 562,
        "startChar": 9,
        "endLine": 562,
        "endChar": 19
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a0c72c6_53ff9865",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-18T15:27:36Z",
      "side": 1,
      "message": "defect: you should check if value is null",
      "range": {
        "startLine": 589,
        "startChar": 12,
        "endLine": 589,
        "endChar": 17
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "093c2888_d0d59c97",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 589,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-21T11:32:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a0c72c6_53ff9865",
      "range": {
        "startLine": 589,
        "startChar": 12,
        "endLine": 589,
        "endChar": 17
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19b7e3e0_ae24b78f",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-18T15:27:36Z",
      "side": 1,
      "message": "nit: to make the code a bit more clear, you could to the increment on the next line",
      "range": {
        "startLine": 597,
        "startChar": 17,
        "endLine": 597,
        "endChar": 41
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddd48bca_153f0815",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 597,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-21T11:32:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19b7e3e0_ae24b78f",
      "range": {
        "startLine": 597,
        "startChar": 17,
        "endLine": 597,
        "endChar": 41
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e96bda4_b84664ae",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-17T16:09:02Z",
      "side": 1,
      "message": "question: do you think this call will be made for inode xattrs which are not extended attributes? for namespace attributes?",
      "range": {
        "startLine": 662,
        "startChar": 8,
        "endLine": 664,
        "endChar": 22
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c26e417_dbb78c81",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-21T11:32:33Z",
      "side": 1,
      "message": "Yes I think so, the difference will be when we get the key of the xattr, if it is something like \"user.\", \"security.\", ... we retrieve it as an inode xattr, if it is \"lustre\" then we retrieve the lustre attributes, if it is \"path\" ...",
      "parentUuid": "3e96bda4_b84664ae",
      "range": {
        "startLine": 662,
        "startChar": 8,
        "endLine": 664,
        "endChar": 22
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3adb26bb_159214fd",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-28T08:17:29Z",
      "side": 1,
      "message": "But for Lustre, you will have to fetch every attr stripe count, size, ... anytime \"trusted.lov\", \"trusted.lmv\" or \"trusted.hsm\" are modified. How do you intend to handle this? You won\u0027t have any \"lustre....\" unless you artificially create one. Say you have a CL_SETXATTR for \"trusted.lov\", what would you do in this case?",
      "parentUuid": "8c26e417_dbb78c81",
      "range": {
        "startLine": 662,
        "startChar": 8,
        "endLine": 664,
        "endChar": 22
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c2b9064_1c87b1e5",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-29T12:31:24Z",
      "side": 1,
      "message": "I guess I should have checked before writting this comment. In case of a migration, a CL_LAYOUT event is emitted not a xattr one. But my point remains the same, one event can lead to a lot of attributes to fetch on the file: stripe count, size, mirror ids, OSTs, ... I wasn\u0027t sure how you would handle this but it seems to be a discussion for later.",
      "parentUuid": "3adb26bb_159214fd",
      "range": {
        "startLine": 662,
        "startChar": 8,
        "endLine": 664,
        "endChar": 22
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb8216e6_4e5818c7",
        "filename": "src/enricher.c",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-11-29T13:20:54Z",
      "side": 1,
      "message": "For now our plan is to try and enrich any xattr set, and if it has a specific name, retrieve specific attributes.\n\nSo for instance, if we have a SETXATTR event for \"trusted.lov\", we will add it to the list of xattr to enrich in the changelog, then we get here, we read the name of the attribute to enrich, and since it is \"trusted.lov\", we retrieve a list of Lustre specific attributes.",
      "parentUuid": "4c2b9064_1c87b1e5",
      "range": {
        "startLine": 662,
        "startChar": 8,
        "endLine": 664,
        "endChar": 22
      },
      "revId": "7e4920933ceec4d01a85ebdc1044d18ce61c966c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}