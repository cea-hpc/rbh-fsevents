{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3ce7e9e7_959c3ad7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-24T08:48:06Z",
      "side": 1,
      "message": "suggest: maybe for future patches but it would be nice to know what was broken in the commit message",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "c7bc67512b6684be1e966e2490cefe2cfac6ca4a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1a3954a_8e8e2ccd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-24T15:18:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ce7e9e7_959c3ad7",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "c7bc67512b6684be1e966e2490cefe2cfac6ca4a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c193594_dc6c644b",
        "filename": "src/sources/lustre.c",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-11-21T13:21:57Z",
      "side": 1,
      "message": "I guess this needs two steps because we cannot have FET_LINK and FET_XATTR in a single return?",
      "revId": "c7bc67512b6684be1e966e2490cefe2cfac6ca4a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df37196d_87c0e2a6",
        "filename": "src/sources/lustre.c",
        "patchSetId": 3
      },
      "lineNbr": 239,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-23T12:54:26Z",
      "side": 1,
      "message": "You are right, that\u0027s the point.",
      "parentUuid": "5c193594_dc6c644b",
      "revId": "c7bc67512b6684be1e966e2490cefe2cfac6ca4a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1bafcca_a6601d45",
        "filename": "src/sources/lustre.c",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2022-11-24T08:48:06Z",
      "side": 1,
      "message": "question: will this pointer still be valid when the changelog record is freed?\n\nIs this assuming that since the record is saved the caller will still be able to access this pointer and the fsevent generated in the first step will be freed before the second step (so before the record is actually freed)?\n\nIf so a small comment indicating that fsevent has a smaller lifetime than the record would be nice.",
      "range": {
        "startLine": 251,
        "startChar": 37,
        "endLine": 251,
        "endChar": 55
      },
      "revId": "c7bc67512b6684be1e966e2490cefe2cfac6ca4a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f62c2923_c2b69498",
        "filename": "src/sources/lustre.c",
        "patchSetId": 3
      },
      "lineNbr": 251,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-24T15:18:55Z",
      "side": 1,
      "message": "The pointer is not valid anymore in this case. Change that by allocating a part of the stack to store the name.",
      "parentUuid": "b1bafcca_a6601d45",
      "range": {
        "startLine": 251,
        "startChar": 37,
        "endLine": 251,
        "endChar": 55
      },
      "revId": "c7bc67512b6684be1e966e2490cefe2cfac6ca4a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db00d258_15ce3dd5",
        "filename": "src/sources/lustre.c",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-11-21T13:21:57Z",
      "side": 1,
      "message": "(style) I don\u0027t think that goto helps understanding, setting process_step to 1 here and returning directly is probably easier to follow as nothing else points to save_event.\nOr will there be more multistep events with other changelogs? in which case we should set process_step\u003d0 after end_event. It\u0027s just not really coherent to have one here and the other at the bottom.",
      "revId": "c7bc67512b6684be1e966e2490cefe2cfac6ca4a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c122bdd4_e5bc06df",
        "filename": "src/sources/lustre.c",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-11-23T12:54:26Z",
      "side": 1,
      "message": "There will be more multistep events.\n\nI totally agree with the process_step set to 0, so I moved it to the beginning instead (when we check that there is no previous record saved, so we know this is the first time w will manage the new one). I can, as you suggested, move it to the bottom, but that means I will need to initialize it when building the iterator (which is not an issue at all). As you wish :).",
      "parentUuid": "db00d258_15ce3dd5",
      "revId": "c7bc67512b6684be1e966e2490cefe2cfac6ca4a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}