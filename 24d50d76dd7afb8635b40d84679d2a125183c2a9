{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "06dcddae_512f4f52",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "If needed, I can split this patch in two/three parts. Just ask ;).",
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5ea0f3e_6737b2b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2023-03-03T10:55:12Z",
      "side": 1,
      "message": "I didn\u0027t do a full review since there is are lot of comments already.",
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00c54af0_9bff42d2",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2023-03-03T10:55:12Z",
      "side": 1,
      "message": "comment: it seems dangerous to me to have enums changing their value depending on the build configuration. It doesn\u0027t hurt to have Lustre specific values even when we don\u0027t use it.",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 37,
        "endChar": 15
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3bbedc2_7025aec0",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00c54af0_9bff42d2",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 37,
        "endChar": 15
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12d70f85_f5cc2aa0",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "question: not sure this is the right way to do this, also we may consider the enricher is by default related to the source\n\nWhat I am sure about is we cannot rely on the YAML content to select the right enricher without deeply modifying the existing code.",
      "range": {
        "startLine": 45,
        "startChar": 33,
        "endLine": 45,
        "endChar": 54
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dd2583e_b93c72b5",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "An improvement could be that if the command line contains --enrich and the source (here, --lustre), the type of enricher is automatically assumed to be lustre. But if we do the commands in separate lines, specifying the type of enricher and the mountpoint seems okay to me.\n\nAnother thing, which I\u0027m not really sure is a code improvement, but I think could be a readability improvement, is to also have the source type specified as a proper optional argument, i.e. `--src-type lustre`. That would align the enricher options and the source ones, but extend the command line a bit, which is a counterpoint:\n`rbh-fsevents --src-type lustre --enricher lustre --enrich /mnt/lustre src dest`",
      "parentUuid": "12d70f85_f5cc2aa0",
      "range": {
        "startLine": 45,
        "startChar": 33,
        "endLine": 45,
        "endChar": 54
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dc64ecd_f4778f69",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2023-03-03T10:55:12Z",
      "side": 1,
      "message": "An alternative suggestion: we could use an URI for the --enrich (that I would rename --enricher):\n\n```\nrbh-fsevents --lustre lustre-MDT000 - |\n    rbh-fsevents --enricher rbh:lustre:/mnt/lustre - rbh:mongo:store\n```\n\nLike this, we know the path and type of backend to use for the enricher. Also, we could add a --posix for the source to be consistent with Lustre.\n\n```\nrbh-fsevents --posix /mnt/myfs - |\n    rbh-fsevents --enricher rbh:posix:/mnt/myfs - rbh:mongo:myfs\n```\n\nAnd the one liner would look like this (and similarly for lustre):\n```\nrbh-fsevents --posix --enricher rbh:posix:/mnt/myfs /mnt/myfs rbh:mongo:myfs\n```\n\nMaybe we could make it simpler for the one liner with a --enrich flag and assume that both the enricher and the source will use the same backend:\n```\nrbh-fsevents --enrich rbh:posix:/mnt/myfs rbh:mongo:myfs\n```\n\nBut in the case of Lustre we might want to use something like `rbh:lustre:lustre-MDT000` which breaks the current URI definition and would maybe confuse the users. I don\u0027t know that it would work for lustre since the source and enricher require different information (lustre-MDT000 for the source and /mnt/lustre for the enricher). Although, it may be possible to get the mount point from the MDT name. Thanks to the mdt name, we have the name of the filesystem so we can retrive the mount point.\n\nSomething like this would probably work:\n```\nrbh-fsevents --enrich rbh:lustre:lustre-MDT000 rbh:mongo:lustre\n```\n\nThis would not prevent a user to do something like this:\n```\nrbh-fsevents --enricher rbh:lustre:/mnt/lustre --posix /mnt/lustre rbh:mongo:lustre\n```\n\nWhich seems weird to do but it would still be possible.",
      "parentUuid": "8dd2583e_b93c72b5",
      "range": {
        "startLine": 45,
        "startChar": 33,
        "endLine": 45,
        "endChar": 54
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf85ed2a_aa0fcbaa",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Another way to workaround, and because I like the solution Guillaume suggested, is to have a uri, but starting with another key like:\n\n```\n$ rbh-fsevents --enrich rbh:lustre:/mnt/lustre src:lustre:lustre-MDT0000 rbh:mongo:myfs\n$ rbh-fsevents --enrich rbh:posix:/mnt/lustre src:lustre:lustre-MDT0000\nrbh:mongo:myfs\n$ rbh-fsevents src:lustre:lustre-MDT0000 - |\n    rbh-fsevents --enrich rbh:lustre/mnt/lustre - - |\n    rbh-fsevents - rbh:mongo:myfs\n```",
      "parentUuid": "1dc64ecd_f4778f69",
      "range": {
        "startLine": 45,
        "startChar": 33,
        "endLine": 45,
        "endChar": 54
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1f6e5fc_7decede8",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "suggest: keep the enricher.c file, and the iter_enrich function in it, but it would just do this switch",
      "range": {
        "startLine": 208,
        "startChar": 12,
        "endLine": 208,
        "endChar": 36
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eed84c9c_6ae7bae3",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1f6e5fc_7decede8",
      "range": {
        "startLine": 208,
        "startChar": 12,
        "endLine": 208,
        "endChar": 36
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb611894_30904777",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "suggest: if you keep the enricher.c file, this could also be put in it.\n`enricher_type \u003d parse_enricher_type(optarg)` and define `parse_enricher_type` in enricher.c",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 18
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e8deb08_69df97ef",
        "filename": "rbh-fsevents.c",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb611894_30904777",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 18
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5270b37f_c971c97e",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "minor: to remove, and check if the include is necessary",
      "range": {
        "startLine": 6,
        "startChar": 20,
        "endLine": 6,
        "endChar": 31
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2676f152_96ace127",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5270b37f_c971c97e",
      "range": {
        "startLine": 6,
        "startChar": 20,
        "endLine": 6,
        "endChar": 31
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90914e1d_b4c8686d",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "defect: lustre_attrs.h",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 11
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7be1d56_bf346d1d",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90914e1d_b4c8686d",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 11
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62d1b6d8_f31d2c73",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "minor: to remove",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab4ad085_6670152c",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62d1b6d8_f31d2c73",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ead5b85_831a7f63",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "minor: to remove",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 9
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41ad04ec_40eac9be",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ead5b85_831a7f63",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 9
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a015771_e521b0ff",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "style: width \u003e80",
      "range": {
        "startLine": 54,
        "startChar": 12,
        "endLine": 54,
        "endChar": 96
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f44233b0_bc0159e9",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "comment: maybe it\u0027s time we remove this layer, and keep the info to enrich directly in rbh-fsevents",
      "range": {
        "startLine": 54,
        "startChar": 16,
        "endLine": 54,
        "endChar": 49
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c8552a3_828ec91a",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a015771_e521b0ff",
      "range": {
        "startLine": 54,
        "startChar": 12,
        "endLine": 54,
        "endChar": 96
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc1b4e98_ed13c026",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Because it\u0027s not dealing with xattrs? You may be right..\n\nThere may be some things to change in the reader in this case, do you want us to do this in the middle of the stack, or do we wait til the whole is done?",
      "parentUuid": "f44233b0_bc0159e9",
      "range": {
        "startLine": 54,
        "startChar": 16,
        "endLine": 54,
        "endChar": 49
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad7f0e8_317356fd",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "style: width \u003e80",
      "range": {
        "startLine": 59,
        "startChar": 16,
        "endLine": 59,
        "endChar": 82
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09662dab_b6fae560",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ad7f0e8_317356fd",
      "range": {
        "startLine": 59,
        "startChar": 16,
        "endLine": 59,
        "endChar": 82
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42a68fb2_cf2d5f30",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "comment: for now this is good enough, but for future events, we may have to retrieve only a subset of information (e.g. an archival event only requires retrieving the hsm info for instance, not other stuff)",
      "range": {
        "startLine": 61,
        "startChar": 16,
        "endLine": 62,
        "endChar": 61
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff280bab_98bc51ab",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "42a68fb2_cf2d5f30",
      "range": {
        "startLine": 61,
        "startChar": 16,
        "endLine": 62,
        "endChar": 61
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e456b098_3425bc69",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "style: alignment",
      "range": {
        "startLine": 78,
        "startChar": 16,
        "endLine": 78,
        "endChar": 44
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbb8747e_d2ee2ae7",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e456b098_3425bc69",
      "range": {
        "startLine": 78,
        "startChar": 16,
        "endLine": 78,
        "endChar": 44
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02660cad_d4a577b6",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "minor: should be in the if, before the close (or if rc \u003d\u003d -1, set size to rc, and add a goto to line 105",
      "range": {
        "startLine": 93,
        "startChar": 4,
        "endLine": 93,
        "endChar": 23
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "939dbe87_bbfb3188",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02660cad_d4a577b6",
      "range": {
        "startLine": 93,
        "startChar": 4,
        "endLine": 93,
        "endChar": 23
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f378b4d_da523472",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "minor: errno not reset before/after",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 105,
        "endChar": 14
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5462bb69_4855e116",
        "filename": "src/enrichers/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f378b4d_da523472",
      "range": {
        "startLine": 105,
        "startChar": 4,
        "endLine": 105,
        "endChar": 14
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf7926e2_accb6056",
        "filename": "src/enrichers/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 748,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "style: width \u003e80",
      "range": {
        "startLine": 748,
        "startChar": 4,
        "endLine": 748,
        "endChar": 82
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4081ad7d_ff18bf00",
        "filename": "src/enrichers/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 748,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf7926e2_accb6056",
      "range": {
        "startLine": 748,
        "startChar": 4,
        "endLine": 748,
        "endChar": 82
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec9bcbcc_f3e839d7",
        "filename": "src/enrichers/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 777,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "major: I don\u0027t think this file should be called posix.c, because everything done in it is not specific to POSIX, but rather the enriching process in general. Per RBH specification, you can only enrich statx values in an upsert for instance, that is the behaviour of the enriching process in RBH, and not a behaviour specific to POSIX.",
      "range": {
        "startLine": 777,
        "startChar": 0,
        "endLine": 777,
        "endChar": 17
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "225ca168_e301c46e",
        "filename": "src/enrichers/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 777,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2023-03-03T10:55:12Z",
      "side": 1,
      "message": "I don\u0027t agree with you that statx should be enforced by RBH\u0027s specification. Otherwise, we will have trouble integrating non POSIX backends such as Hestia.",
      "parentUuid": "ec9bcbcc_f3e839d7",
      "range": {
        "startLine": 777,
        "startChar": 0,
        "endLine": 777,
        "endChar": 17
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c596b2a1_ada20046",
        "filename": "src/enrichers/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 777,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "I agree with Guillaume.",
      "parentUuid": "225ca168_e301c46e",
      "range": {
        "startLine": 777,
        "startChar": 0,
        "endLine": 777,
        "endChar": 17
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb7b391_0d4226a0",
        "filename": "src/enrichers/posix_internals.h",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "major: idem, I don\u0027t think any of this is specific to POSIX",
      "range": {
        "startLine": 3,
        "startChar": 8,
        "endLine": 3,
        "endChar": 25
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39007031_85f74230",
        "filename": "src/enrichers/posix_internals.h",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecb7b391_0d4226a0",
      "range": {
        "startLine": 3,
        "startChar": 8,
        "endLine": 3,
        "endChar": 25
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a984e81f_2302ee83",
        "filename": "src/sources/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "minor? may need to change this helper",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 80,
        "endChar": 3
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12936208_898d65a1",
        "filename": "src/sources/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2023-02-09T11:17:50Z",
      "side": 1,
      "message": "No I think it\u0027s the same, the fid is still kept at the same place",
      "parentUuid": "a984e81f_2302ee83",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 80,
        "endChar": 3
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02f78c35_d73f4c83",
        "filename": "src/sources/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "12936208_898d65a1",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 80,
        "endChar": 3
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "520b823e_00620757",
        "filename": "src/sources/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "suggest: not okay with this, want to have a variadic `build_pairs()`\n\n static struct _pair_arg {\n     const char *key;\n     struct rbh_value *(*part_builder)(void *);\n     void *part_builder_arg;\n };\n \n static struct rbh_value_pair *\n build_pairs(struct _pair_arg arg, ...) { }",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 186,
        "endChar": 1
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b67a2c00_7d28c870",
        "filename": "src/sources/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-02-07T15:38:31Z",
      "side": 1,
      "message": "style: width \u003e80",
      "range": {
        "startLine": 313,
        "startChar": 12,
        "endLine": 313,
        "endChar": 93
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0593c44_0406895e",
        "filename": "src/sources/lustre.c",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2023-03-16T15:03:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b67a2c00_7d28c870",
      "range": {
        "startLine": 313,
        "startChar": 12,
        "endLine": 313,
        "endChar": 93
      },
      "revId": "24d50d76dd7afb8635b40d84679d2a125183c2a9",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}