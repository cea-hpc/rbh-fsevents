{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bd42d142_646e4a3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-09-13T10:07:02Z",
      "side": 1,
      "message": "(+1 anyway despite comment as it doesn\u0027t really matter)",
      "revId": "e96b0e49b3d1ae815d2afa036a47276e6a2a071b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53c6870d_7326e46e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-09-16T14:29:58Z",
      "side": 1,
      "message": "Thanks for your reviews everyone!\n\n@Dominique, I began reworking the patchs following your advice, I will upload a new version next week.",
      "revId": "e96b0e49b3d1ae815d2afa036a47276e6a2a071b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae655f33_8c0d0f8b",
        "filename": "rbh-fsevents.c",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-09-13T10:07:02Z",
      "side": 1,
      "message": "\u003c- evil\n\nJust for fun I tried creating a filesystem named test-MDT -- it works :p\n```\n[root@c8 ~]# lfs  df /mnt/lustre0\nUUID                   1K-blocks        Used   Available Use% Mounted on\ntest-MDT-MDT0000_UUID       44944        1596       39264   4% /mnt/lustre0[MDT:0]\ntest-MDT-OST0000_UUID       73176        1248       64760   2% /mnt/lustre0[OST:0]\n\nfilesystem_summary:        73176        1248       64760   2% /mnt/lustre0\n```\n\nI didn\u0027t try mount but I could also create \"-MDT\", -MDT0000\"... Doesn\u0027t look like lustre cares.\n\nWell I guess we don\u0027t really need to handle that and there is no `strrstr` anyway, but my question is more: what is this trying to do?\nI assume I\u0027ll understand when reviewing the later/earlier patches (note to self: top of the list in gerrit open changes isn\u0027t the top of the stack...), but ideally you shouldn\u0027t have to guess that it\u0027s an MDT name -- you\u0027ll have to error anyway if it\u0027s an mdt that doesn\u0027t exist, so like \u0027fopen(arg, \"r\") you should try to \"open\" an MDT with this name without restriction in my opinion; the checks below are incomplete and in my opinion harmful.",
      "revId": "e96b0e49b3d1ae815d2afa036a47276e6a2a071b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cba9d367_e7173da3",
        "filename": "rbh-fsevents.c",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2022-09-16T14:29:58Z",
      "side": 1,
      "message": "Yeah, you\u0027re right.\n\nI\u0027m thinking of multiple ways to better manage this. The first one is to force the user to indicate which kind of reader they wants to use, to avoid trying everyone of them. In this case, we let the program fail if the right `source_init()` fails.\n\n # rbh-fsevents --reader lustre lustre-MDT0000 -\n\nOr overloading rbh-fsevents for a lustre usage, but this may be overkill.\n \nThe second one is to replace those checks by trying to read `/dev/changelog-%s`, with `%s` the device name. This is the first step of `llapi_changelog_start()`.\n\nWhat do you think?",
      "parentUuid": "ae655f33_8c0d0f8b",
      "revId": "e96b0e49b3d1ae815d2afa036a47276e6a2a071b",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}